export class ModelProcessor{constructor(e){this._model=[],e&&e.length&&(this._model=this.process(e))}get model(){return this._model}process(e){return e.map(e=>{const r=e.population?e.population/1e5:1,t={country:e.country,population:e.population};return e.state&&e.state.length&&(t.state=e.state),t.values=e.values.map((e,t,i)=>{const d={5:this.avrg(5,t,i),7:this.avrg(7,t,i),14:this.avrg(14,t,i),21:this.avrg(21,t,i),28:this.avrg(28,t,i)},o=this.diff(e,t,i),a={confirmed:e.confirmed,dead:e.deaths,recovered:e.recovered,active:this.active(e)};return{...a,diff:o,avrg:d,ratio:{...this.ratio(a,r),diff:this.ratio(o,r),avrg:{5:this.ratio(d[5],r),7:this.ratio(d[7],r),14:this.ratio(d[14],r),21:this.ratio(d[21],r),28:this.ratio(d[28],r)}},timestamp:e.timestamp}}),t})}diff(e,r,t){return r?{confirmed:e.confirmed-t[r-1].confirmed,dead:e.deaths-t[r-1].deaths,recovered:e.recovered-t[r-1].recovered,active:this.active(e)-this.active(t[r-1])}:{confirmed:0,dead:0,recovered:0,active:0}}avrg(e,r,t){if(r){const i={confirmed:0,dead:0,recovered:0,active:0};let d=0;for(let o=r;o>r-e&&o>0;o--){const e=this.diff(t[o],o,t);i.confirmed+=e.confirmed,i.dead+=e.dead,i.recovered+=e.recovered,i.active+=e.active,d++}return d?{confirmed:i.confirmed/d,dead:i.dead/d,recovered:i.recovered/d,active:i.active/d}:i}return{confirmed:t[r].confirmed,dead:t[r].deaths,recovered:t[r].recovered,active:this.active(t[r])}}active(e){return e.confirmed-e.deaths-e.recovered}ratio(e,r){return{confirmed:e.confirmed/r,dead:e.dead/r,recovered:e.recovered/r,active:e.active/r}}}