import et from"prop-types";import{atom as ot,selector as rt}from"recoil";import{ModelArrayPropTypes as R}from"states/model/model";import{ModelCollector as at}from"states/model/collector";import{ModelProcessor as ct}from"states/model/processor";export const nameFormatter=t=>t.state&&t.state.length?`${t.country} - ${t.state}`:t.country;export const urlFormatter=t=>t.state&&t.state.length?`${t.country}/${t.state}`:t.country;export const numberFormatter=t=>Number.isInteger(t)?t.toLocaleString():Math.round(t).toLocaleString();export const timeFormatter=t=>new Date(t).toUTCString().replace(/\s00:.*/,"");export const modelFind=(t,e,o)=>t.find(t=>o?!!t.state&&(t.country===e&&t.state===o):t.country===e);export const State=ot({key:"modelState",default:[]});export const Selector=rt({key:"modelStateSelector",get:()=>new Promise((t,e)=>{const o=()=>{(new at).collect().then(e=>{const o=new ct(e);setTimeout(()=>{const e=o.model;et.checkPropTypes(R,e,"get","Selector"),et.resetWarningCache(),t(e)},1)}).catch(e)};navigator.serviceWorker&&navigator.serviceWorker.controller?navigator.serviceWorker.ready.then(e=>{e.sync.register("UPDATE_MODEL").then(()=>{navigator.serviceWorker.onmessage=e=>{et.checkPropTypes(R,e.data,"get","Selector"),et.resetWarningCache(),t(e.data)}}).catch(()=>{o()})}):o()})});export default State;