import React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{createStyles,lighten,makeStyles,Table,TableBody,TableCell,TableContainer,TableHead,TablePagination,TableRow,TableSortLabel,Toolbar,Typography,Checkbox,IconButton,Tooltip}from"@material-ui/core";import{ModelProcessorPropTypes}from"model";import{Delete as DeleteIcon,FilterList as FilterListIcon}from"@material-ui/icons";const useStyles=makeStyles(theme=>createStyles({root:{width:"100%"},paper:{width:"100%",marginBottom:theme.spacing(2)},table:{minWidth:750},visuallyHidden:{border:0,clip:"rect(0 0 0 0)",height:1,margin:-1,overflow:"hidden",padding:0,position:"absolute",top:20,width:1}}));function descendingComparator(a,b,orderBy){return b[orderBy]<a[orderBy]?-1:b[orderBy]>a[orderBy]?1:0}const headCells=[{id:"name",numeric:!1,disablePadding:!0,label:"Country/Region"},{id:"confirmed",numeric:!0,disablePadding:!0,label:"Confirmed"},{id:"deaths",numeric:!0,disablePadding:!1,label:"Deaths"},{id:"recovered",numeric:!0,disablePadding:!1,label:"Recovered"}];function EnhancedTableHead(props){const{classes,onSelectAllClick,order,orderBy,numSelected,rowCount,onRequestSort}=props;return React.createElement(TableHead,null,React.createElement(TableRow,null,React.createElement(TableCell,{padding:"checkbox"},React.createElement(Checkbox,{indeterminate:numSelected>0&&numSelected<rowCount,checked:rowCount>0&&numSelected===rowCount,onChange:onSelectAllClick,inputProps:{"aria-label":"select all desserts"}})),headCells.map(headCell=>{return React.createElement(TableCell,{key:headCell.id,align:headCell.numeric?"right":"left",padding:headCell.disablePadding?"none":"default",sortDirection:orderBy===headCell.id&&order},React.createElement(TableSortLabel,{active:orderBy===headCell.id,direction:orderBy===headCell.id?order:"asc",onClick:(property=headCell.id,event=>{onRequestSort(event,property)})},headCell.label,orderBy===headCell.id?React.createElement("span",{className:classes.visuallyHidden},"desc"===order?"sorted descending":"sorted ascending"):null));var property})))}const useToolbarStyles=makeStyles(theme=>createStyles({root:{paddingLeft:theme.spacing(2),paddingRight:theme.spacing(1)},highlight:"light"===theme.palette.type?{color:theme.palette.secondary.main,backgroundColor:lighten(theme.palette.secondary.light,.85)}:{color:theme.palette.text.primary,backgroundColor:theme.palette.secondary.dark},title:{flex:"1 1 100%"}})),EnhancedTableToolbar=props=>{const classes=useToolbarStyles(),{numSelected}=props,date=props.processor.latestUpdateDate,dateLabel=date?props.processor.utc(new Date(date)):"";return React.createElement(Toolbar,{className:clsx(classes.root,{[classes.highlight]:numSelected>0})},numSelected>0?React.createElement(Typography,{className:classes.title,color:"inherit",variant:"subtitle1",component:"div"},numSelected," selected"):React.createElement(Typography,{className:classes.title,variant:"h6",id:"tableTitle",component:"div"},dateLabel),numSelected>0?React.createElement(Tooltip,{title:"Delete"},React.createElement(IconButton,{"aria-label":"delete"},React.createElement(DeleteIcon,null))):React.createElement(Tooltip,{title:"Filter list"},React.createElement(IconButton,{"aria-label":"filter list"},React.createElement(FilterListIcon,null))))};export const Countries=({processor,densePadding})=>{const rowsPerPageRange=[10,20,30],classes=useStyles(),[order,setOrder]=React.useState("desc"),[orderBy,setOrderBy]=React.useState("confirmed"),[selected,setSelected]=React.useState([]),[page,setPage]=React.useState(0),[rowsPerPage,setRowsPerPage]=React.useState(rowsPerPageRange[0]),rows=processor.model.map(model=>({...model.values[model.values.length-1],name:processor.name(model)})),emptyRows=rowsPerPage-Math.min(rowsPerPage,rows.length-page*rowsPerPage);return React.createElement("div",{className:classes.root},React.createElement(EnhancedTableToolbar,{numSelected:selected.length,processor}),React.createElement(TableContainer,null,React.createElement(Table,{className:classes.table,"aria-labelledby":"tableTitle",size:densePadding?"small":"medium","aria-label":"enhanced table"},React.createElement(EnhancedTableHead,{classes,numSelected:selected.length,order,orderBy,onSelectAllClick:event=>{if(event.target.checked){const newSelecteds=rows.map(n=>n.name);setSelected(newSelecteds)}else setSelected([])},onRequestSort:(event,property)=>{setOrder(orderBy===property&&"asc"===order?"desc":"asc"),setOrderBy(property)},rowCount:rows.length}),React.createElement(TableBody,null,function(array,comparator){const stabilizedThis=array.map((el,index)=>[el,index]);return stabilizedThis.sort((a,b)=>{const order=comparator(a[0],b[0]);return 0!==order?order:a[1]-b[1]}),stabilizedThis.map(el=>el[0])}(rows,function(order,orderBy){return"desc"===order?(a,b)=>descendingComparator(a,b,orderBy):(a,b)=>-descendingComparator(a,b,orderBy)}(order,orderBy)).slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage).map((row,index)=>{const isItemSelected=(name=row.name,-1!==selected.indexOf(name));var name;const labelId="enhanced-table-checkbox-"+index;return React.createElement(TableRow,{hover:!0,onClick:event=>((event,name)=>{const selectedIndex=selected.indexOf(name);let newSelected=[];-1===selectedIndex?newSelected=newSelected.concat(selected,name):0===selectedIndex?newSelected=newSelected.concat(selected.slice(1)):selectedIndex===selected.length-1?newSelected=newSelected.concat(selected.slice(0,-1)):selectedIndex>0&&(newSelected=newSelected.concat(selected.slice(0,selectedIndex),selected.slice(selectedIndex+1))),setSelected(newSelected)})(0,row.name),role:"checkbox","aria-checked":isItemSelected,tabIndex:-1,key:row.name,selected:isItemSelected},React.createElement(TableCell,{padding:"checkbox"},React.createElement(Checkbox,{checked:isItemSelected,inputProps:{"aria-labelledby":labelId}})),React.createElement(TableCell,{component:"th",id:labelId,scope:"row",padding:"none"},row.name),React.createElement(TableCell,{align:"right"},row.confirmed.toLocaleString()),React.createElement(TableCell,{align:"right"},row.deaths.toLocaleString()),React.createElement(TableCell,{align:"right"},row.recovered.toLocaleString()))}),emptyRows>0&&React.createElement(TableRow,{style:{height:(densePadding?33:53)*emptyRows}},React.createElement(TableCell,{colSpan:5}))))),React.createElement(TablePagination,{rowsPerPageOptions:rowsPerPageRange,component:"div",count:rows.length,rowsPerPage,page,onChangePage:(event,newPage)=>{setPage(newPage)},onChangeRowsPerPage:event=>{setRowsPerPage(parseInt(event.target.value,10)),setPage(0)}}))};Countries.displayName="Countries",Countries.propTypes={processor:ModelProcessorPropTypes,densePadding:PropTypes.bool.isRequired};export default Countries;