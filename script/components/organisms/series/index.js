import React, { memo } from 'react';
import { ModelPropTypes, numberFormatter, timeFormatter } from 'model';
export const Series = ({ model }) => {
    return (React.createElement("table", { className: "series" },
        React.createElement("thead", null,
            React.createElement("tr", null,
                React.createElement("th", null),
                React.createElement("th", null),
                React.createElement("th", { colSpan: 3 }, "Confirmed"),
                React.createElement("th", { colSpan: 3 }, "Dead"),
                React.createElement("th", { colSpan: 3 }, "Recovered"),
                React.createElement("th", { colSpan: 3 }, "Active")),
            React.createElement("tr", null,
                React.createElement("th", null),
                React.createElement("th", null),
                React.createElement("th", null, "Total"),
                React.createElement("th", null, "/100k"),
                React.createElement("th", null, "Daily"),
                React.createElement("th", null, "Total"),
                React.createElement("th", null, "/100k"),
                React.createElement("th", null, "Daily"),
                React.createElement("th", null, "Total"),
                React.createElement("th", null, "/100k"),
                React.createElement("th", null, "Daily"),
                React.createElement("th", null, "Total"),
                React.createElement("th", null, "/100k"),
                React.createElement("th", null, "Daily"))),
        React.createElement("tbody", null, [...model.values].reverse().map((value, index) => {
            return (React.createElement("tr", { key: index },
                React.createElement("td", null),
                React.createElement("td", null, timeFormatter(value.timestamp)),
                React.createElement("td", null, numberFormatter(value.confirmed)),
                React.createElement("td", null, numberFormatter(value.ratio.confirmed)),
                React.createElement("td", null, numberFormatter(value.diff.confirmed)),
                React.createElement("td", null, numberFormatter(value.dead)),
                React.createElement("td", null, numberFormatter(value.ratio.dead)),
                React.createElement("td", null, numberFormatter(value.diff.dead)),
                React.createElement("td", null, numberFormatter(value.recovered)),
                React.createElement("td", null, numberFormatter(value.ratio.recovered)),
                React.createElement("td", null, numberFormatter(value.diff.recovered)),
                React.createElement("td", null, numberFormatter(value.active)),
                React.createElement("td", null, numberFormatter(value.ratio.active)),
                React.createElement("td", null, numberFormatter(value.diff.active))));
        })),
        React.createElement("tfoot", null,
            React.createElement("tr", null,
                React.createElement("th", null),
                React.createElement("th", null),
                React.createElement("th", { colSpan: 3 }, "Confirmed"),
                React.createElement("th", { colSpan: 3 }, "Dead"),
                React.createElement("th", { colSpan: 3 }, "Recovered"),
                React.createElement("th", { colSpan: 3 }, "Active")),
            React.createElement("tr", null,
                React.createElement("th", null),
                React.createElement("th", null),
                React.createElement("th", null, "Total"),
                React.createElement("th", null, "/100k"),
                React.createElement("th", null, "Daily"),
                React.createElement("th", null, "Total"),
                React.createElement("th", null, "/100k"),
                React.createElement("th", null, "Daily"),
                React.createElement("th", null, "Total"),
                React.createElement("th", null, "/100k"),
                React.createElement("th", null, "Daily"),
                React.createElement("th", null, "Total"),
                React.createElement("th", null, "/100k"),
                React.createElement("th", null, "Daily")))));
};
Series.displayName = 'Series';
Series.propTypes = {
    model: ModelPropTypes,
};
export default memo(Series);
