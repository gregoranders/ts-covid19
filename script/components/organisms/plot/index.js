import e,{memo as o}from"react";import{useRecoilState as v}from"recoil";import{ModelPropTypes as z,timeFormatter as M}from"model";import{ComposedChart as K,XAxis as G,YAxis as B,CartesianGrid as X,Bar as Y,Line as $,ResponsiveContainer as J,Tooltip as Q,Legend as Z}from"recharts";import{default as ee}from"states/avrg";import{default as te}from"states/type";import{any as w,bool as S,number as N}from"prop-types";const O=e=>e.toLocaleString(),ae=t=>{const a=M,l=O;if(!t.active||!t.payload)return null;const r=t.payload.find(e=>e.name.startsWith("Log")),o=t.payload.find(e=>e.name.startsWith("Aver")),n=t.payload.find(e=>e.name.startsWith("Daily"));return r&&o&&n?e.createElement("div",{className:"w3-card-4 tooltip"},e.createElement("h3",null,a(t.label)),e.createElement("dl",{className:"w3-center"},e.createElement("dt",null,t.field),e.createElement("dd",null,l(r.value)),e.createElement("dt",null,o.name),e.createElement("dd",null,l(parseInt(o.value.toFixed(0),10))),e.createElement("dt",null,"Daily"),e.createElement("dd",null,l(n.value)))):null};ae.propTypes={active:S.isRequired,field:w.isRequired,label:N.isRequired,payload:w.isRequired};export const Plot=({model:t})=>{const[a,l]=v(te),[r,o]=v(ee),n=t.values.filter(e=>e[a]>0).map(e=>({value:e[a],diff:e.diff[a],avrg:e.avrg[r][a],timestamp:e.timestamp})),i=["auto",1.2*n[n.length-1].value],m=["auto",1.2*n[n.length-1].diff],s=[n[0].timestamp-1296e5,n[n.length-1].timestamp+1296e5];return e.createElement("div",{className:"w3-container w3-white"},e.createElement("div",{className:"w3-panel w3-right"},e.createElement("label",{htmlFor:"plotType"},"Type"),e.createElement("select",{id:"plotType",onChange:e=>{l(e.target.value)},value:a},e.createElement("option",{value:"confirmed"},"Confirmed"),e.createElement("option",{value:"dead"},"Deaths"),e.createElement("option",{value:"recovered"},"Recovered"),e.createElement("option",{value:"active"},"Active")),e.createElement("label",{htmlFor:"plotAvrg"},"Average"),e.createElement("select",{id:"plotAvrg",onChange:e=>{o(parseInt(e.target.value))},value:r},e.createElement("option",{value:"5"},"5"),e.createElement("option",{value:"7"},"7"),e.createElement("option",{value:"14"},"14"),e.createElement("option",{value:"21"},"21"),e.createElement("option",{value:"28"},"28"))),e.createElement("div",{className:"w3-panel"},e.createElement(J,{aspect:21/9},e.createElement(K,{data:n,margin:{top:5,right:5,left:70,bottom:5}},e.createElement(X,{stroke:"#eee",strokeDasharray:"3 3"}),e.createElement(G,{type:"number",name:"Date",dataKey:"timestamp",scale:"time",domain:s,minTickGap:30,tickFormatter:e=>new Date(e).toUTCString().replace(/\s00:.*/,"")}),e.createElement(B,{yAxisId:"log",scale:"log",orientation:"left",domain:i,tickFormatter:O}),e.createElement(B,{yAxisId:"linear",scale:"linear",orientation:"right",hide:!0,tickFormatter:O}),e.createElement(B,{yAxisId:"diff",scale:"sequential",orientation:"left",domain:m,mirror:!0,tickFormatter:O}),e.createElement($,{name:"Logarithmic",yAxisId:"log",type:"monotone",dataKey:"value",stroke:"#888",dot:!1}),e.createElement($,{name:"Linear",yAxisId:"linear",type:"monotone",dataKey:"value",stroke:"#888",dot:!1}),e.createElement($,{name:`Average (${r} days)`,yAxisId:"diff",type:"monotone",dataKey:"avrg",stroke:"#bbb",strokeDasharray:"5 5",dot:!1}),e.createElement(Y,{name:"Daily",barSize:2,yAxisId:"diff",dataKey:"diff",stroke:"#bbb"}),e.createElement(Q,{content:e.createElement(ae,{field:a})}),e.createElement(Z,null)))))};Plot.displayName="Plot",Plot.propTypes={model:z};export default o(Plot);