import PropTypes from"prop-types";import Population from"./population.js";export var Sort;!function(Sort){Sort[Sort.COUNTRY_ASC=0]="COUNTRY_ASC",Sort[Sort.COUNTRY_DESC=1]="COUNTRY_DESC",Sort[Sort.CONFIRMED_ASC=2]="CONFIRMED_ASC",Sort[Sort.CONFIRMED_DESC=3]="CONFIRMED_DESC",Sort[Sort.DEATHS_ASC=4]="DEATHS_ASC",Sort[Sort.DEATHS_DESC=5]="DEATHS_DESC",Sort[Sort.RECOVERED_ASC=6]="RECOVERED_ASC",Sort[Sort.RECOVERED_DESC=7]="RECOVERED_DESC",Sort[Sort.ACTIVE_ASC=8]="ACTIVE_ASC",Sort[Sort.ACTIVE_DESC=9]="ACTIVE_DESC",Sort[Sort.POPULATION_ASC=10]="POPULATION_ASC",Sort[Sort.POPULATION_DESC=11]="POPULATION_DESC",Sort[Sort.CONFIRMED_NORMALIZED_ASC=12]="CONFIRMED_NORMALIZED_ASC",Sort[Sort.CONFIRMED_NORMALIZED_DESC=13]="CONFIRMED_NORMALIZED_DESC",Sort[Sort.DEATHS_NORMALIZED_ASC=14]="DEATHS_NORMALIZED_ASC",Sort[Sort.DEATHS_NORMALIZED_DESC=15]="DEATHS_NORMALIZED_DESC",Sort[Sort.RECOVERED_NORMALIZED_ASC=16]="RECOVERED_NORMALIZED_ASC",Sort[Sort.RECOVERED_NORMALIZED_DESC=17]="RECOVERED_NORMALIZED_DESC"}(Sort||(Sort={}));const sortByNameAsc=(a,b)=>{const val=a.country.localeCompare(b.country);return 0===val?a.state.localeCompare(b.state):val},sortByNameDesc=(a,b)=>{const val=b.country.localeCompare(a.country);return 0===val?b.state.localeCompare(a.state):val},sortByFieldAsc=(a,b,field)=>a.values[a.values.length-1][field]-b.values[b.values.length-1][field],sortByFieldDesc=(a,b,field)=>b.values[b.values.length-1][field]-a.values[a.values.length-1][field],sortByFieldNormalizedAsc=(a,b,field)=>{const valueA=a.values[a.values.length-1][field],valueB=b.values[b.values.length-1][field],factorA=a.population/1e5,factorB=b.population/1e5;return Math.round(valueA/factorA)-Math.round(valueB/factorB)},sortByFieldNormalizedDesc=(a,b,field)=>{const valueA=a.values[a.values.length-1][field],valueB=b.values[b.values.length-1][field],factorA=a.population/1e5,factorB=b.population/1e5;return Math.round(valueB/factorB)-Math.round(valueA/factorA)},sortByConfirmedAsc=(a,b)=>sortByFieldAsc(a,b,"confirmed"),sortByConfirmedDesc=(a,b)=>sortByFieldDesc(a,b,"confirmed"),sortByConfirmedNormalizedAsc=(a,b)=>sortByFieldNormalizedAsc(a,b,"confirmed"),sortByConfirmedNormalizedDesc=(a,b)=>sortByFieldNormalizedDesc(a,b,"confirmed"),sortByDeathsAsc=(a,b)=>sortByFieldAsc(a,b,"deaths"),sortByDeathsDesc=(a,b)=>sortByFieldDesc(a,b,"deaths"),sortByDeathsNormalizedAsc=(a,b)=>sortByFieldNormalizedAsc(a,b,"deaths"),sortByDeathsNormalizedDesc=(a,b)=>sortByFieldNormalizedDesc(a,b,"deaths"),sortByRecoveredAsc=(a,b)=>sortByFieldAsc(a,b,"recovered"),sortByRecoveredDesc=(a,b)=>sortByFieldDesc(a,b,"recovered"),sortByRecoveredNormalizedAsc=(a,b)=>sortByFieldNormalizedAsc(a,b,"recovered"),sortByRecoveredNormalizedDesc=(a,b)=>sortByFieldNormalizedDesc(a,b,"recovered"),sortByActiveAsc=(a,b)=>{const latestA=a.values[a.values.length-1],latestB=b.values[b.values.length-1];return latestA.confirmed-latestA.deaths-latestA.recovered-(latestB.confirmed-latestB.deaths-latestB.recovered)},sortByActiveDesc=(a,b)=>{const latestA=a.values[a.values.length-1],latestB=b.values[b.values.length-1],activeA=latestA.confirmed-latestA.deaths-latestA.recovered;return latestB.confirmed-latestB.deaths-latestB.recovered-activeA},sortByPopulationAsc=(a,b)=>a.population-b.population,sortByPopulationDesc=(a,b)=>b.population-a.population;export class ModelProcessor{constructor(_model){this._model=[],this._model=_model.map(model=>{const population=model.population?model.population:this.population(model);return{...model,population,values:model.values.map(value=>({...value}))}})}get model(){return this._model}name(model){return model.state&&model.state.length?`${model.country} - ${model.state}`:model.country}url(model){return model.state&&model.state.length?`${model.country}/${model.state}`:model.country}find(country,state){return this._model.find(model=>state&&state.length?model.country===country&&model.state===state:model.country===country)}sort(sortBy){switch(sortBy){case Sort.COUNTRY_ASC:return this._sort(sortByNameAsc);case Sort.COUNTRY_DESC:return this._sort(sortByNameDesc);case Sort.CONFIRMED_ASC:return this._sort(sortByConfirmedAsc);case Sort.CONFIRMED_DESC:return this._sort(sortByConfirmedDesc);case Sort.CONFIRMED_NORMALIZED_ASC:return this._sort(sortByConfirmedNormalizedAsc);case Sort.CONFIRMED_NORMALIZED_DESC:return this._sort(sortByConfirmedNormalizedDesc);case Sort.DEATHS_ASC:return this._sort(sortByDeathsAsc);case Sort.DEATHS_DESC:return this._sort(sortByDeathsDesc);case Sort.DEATHS_NORMALIZED_ASC:return this._sort(sortByDeathsNormalizedAsc);case Sort.DEATHS_NORMALIZED_DESC:return this._sort(sortByDeathsNormalizedDesc);case Sort.RECOVERED_ASC:return this._sort(sortByRecoveredAsc);case Sort.RECOVERED_DESC:return this._sort(sortByRecoveredDesc);case Sort.RECOVERED_NORMALIZED_ASC:return this._sort(sortByRecoveredNormalizedAsc);case Sort.RECOVERED_NORMALIZED_DESC:return this._sort(sortByRecoveredNormalizedDesc);case Sort.ACTIVE_ASC:return this._sort(sortByActiveAsc);case Sort.ACTIVE_DESC:return this._sort(sortByActiveDesc);case Sort.POPULATION_ASC:return this._sort(sortByPopulationAsc);case Sort.POPULATION_DESC:return this._sort(sortByPopulationDesc);default:return this._sort(sortByNameAsc)}}get aggregated(){return this.model.map(model=>model.values).reduce((prev,current)=>current.map((temp,index)=>{if(temp.timestamp!==prev[index].timestamp)throw new Error;return{confirmed:temp.confirmed+prev[index].confirmed,deaths:temp.deaths+prev[index].deaths,recovered:temp.recovered+prev[index].recovered,timestamp:temp.timestamp}}))}utc(date){return date.toUTCString().replace(/\s00:00:00.*/,"")}population(model){const found=Population.find(population=>population.country===model.country&&model.state===population.state);return found?found.count:(console.error(this.name(model)),0)}ratio(a,b){return b?a/b*100:a}get latestUpdateDate(){return this._model&&this._model.length?this._model[0].values[this._model[0].values.length-1].timestamp:null}_sort(sortFn){return this._model.sort(sortFn)}}export const ModelProcessorPropTypes=PropTypes.instanceOf(ModelProcessor).isRequired;