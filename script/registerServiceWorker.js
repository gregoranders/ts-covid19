const checkValidServiceWorker=(swUrl,basename)=>{fetch(swUrl).then(response=>{404===response.status||-1===response.headers.get("content-type").indexOf("javascript")?navigator.serviceWorker.ready.then(registration=>{registration.unregister().then(()=>{window.location.reload()})}):((swUrl,basename)=>{navigator.serviceWorker.register(swUrl,{scope:basename}).then(registration=>{registration.onupdatefound=()=>{const installingWorker=registration.installing;installingWorker&&(installingWorker.onstatechange=()=>{console.log("state change",installingWorker),"installed"===installingWorker.state?navigator.serviceWorker.controller?console.log("New content is available; please refresh."):navigator.serviceWorker.controller&&console.log("Content is cached for offline use."):"activated"===installingWorker.state&&installingWorker.postMessage({type:"CLIENTS_CLAIM"})})}}).catch(error=>{console.error("Error during service worker registration:",error)})})(swUrl,basename)}).catch(()=>{console.log("No internet connection found. App is running in offline mode.")})};export const registerServiceWorker=(basename="/")=>{if(navigator.serviceWorker){if(new URL(window.location.toString()).origin!==window.location.origin)return;checkValidServiceWorker(`${basename}serviceWorker.js?base=${basename}`,basename)}else console.error("Missing navigator.serviceWorker")};export const unregister=()=>{navigator.serviceWorker&&navigator.serviceWorker.ready.then(registration=>{registration.unregister()})};export default registerServiceWorker;