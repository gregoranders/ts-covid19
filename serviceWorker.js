var ie;!function(e){const t=new URL(location.toString()).searchParams.get("base")||"/";new((()=>{class t{constructor(e=self,t="/",s=[]){this.service=e,this.base=t,this.cacheUrls=s,e.customServiceWorker=this}register(){if(!this.service)throw new Error("Invalid service [ServiceWorkerGlobalScope]");this.service.onsync=this.onSync.bind(this),this.service.onactivate=this.onActivate.bind(this),this.service.onfetch=this.onFetch.bind(this),this.service.oninstall=this.onInstall.bind(this),this.service.onmessage=this.onMessage.bind(this)}onInstall(e){e.waitUntil(new Promise(e=>{this.initializeCache().then(()=>{e(this.service.skipWaiting())})}))}async onActivate(e){e.waitUntil(new Promise(e=>{this.flushCache().then(()=>{e(this.service.skipWaiting())})}))}onFetch(e){"only-if-cached"===e.request.cache&&"same-origin"!==e.request.mode||e.respondWith(caches.match(e.request).then(t=>t||this.service.fetch(e.request,{credentials:"same-origin"}).then(t=>{if(!t||200!==t.status||"basic"!==t.type)return t;const s=t.clone();return caches.open(this.cacheId("fetch")).then(t=>{t.put(e.request,s)}).catch(e=>{throw e}),t})))}onMessage(s){if(this.log("message",s),s&&s.data&&s.data.type)switch(s.data.type){case"GET_VERSION":s.ports[0].postMessage(t.version);break;case"CONTENT_CACHED":this.service.clients.matchAll().then(e=>{e.forEach(e=>{e.postMessage("CONTENT_CACHED")})});break;case"CONTENT_UPDATED":this.service.clients.matchAll().then(e=>{e.forEach(e=>{e.postMessage("CONTENT_UPDATED")})});break;case"CLIENTS_CLAIM":this.service.clients.claim();break;case"SKIP_WAITING":this.service.skipWaiting();break;case"REDUNDANT":this.log("REDUNDANT");break;case"GET_MODELS":(new e.ModelCollector).collect().then(t=>{const a=new e.ModelProcessor(t);s.ports[0].postMessage(a.model)})}else this.log("message raw",s)}async onSync(t){switch(t.tag){case"UPDATE_MODEL":const t=new e.ModelCollector,s=await t.collect(),a=new e.ModelProcessor(s).model;this.service.clients.matchAll().then(e=>{e.forEach(e=>{e.postMessage(a)})})}}log(...e){console.log(`%c${t.id}-${t.version}`,["background: #000080","border-radius: 0.5em","color: white","font-weight: bold","padding: 2px 0.em"].join(";"),e)}cacheId(e){return`${e}-${t.version}`}initializeCache(){return new Promise((e,t)=>{caches.open(this.cacheId("install")).then(e=>e.addAll(this.cacheUrls.map(e=>`${this.base}${e}`))).then(e).catch(t)})}flushCache(){const e=[this.cacheId("install"),this.cacheId("fetch"),this.cacheId("data")];return new Promise((t,s)=>{caches.keys().then(s=>{t(Promise.all(s.map(t=>-1===e.indexOf(t)?caches.delete(t):Promise.resolve(!0))))}).catch(s)})}}return t.id="ServiceWorker",t.version="0.0.2",t})())(self,t,[]).register()}(ie||(ie={})),function(e){const t={undefined:!1,fieldSeparator:",",lineSeparator:"\n",quote:'"'},s=(e,t)=>{if(!t.undefined||e.length)return e},a=(e,t,s)=>{t.push(e),s.field++,s.fieldOffset=-1,s.appendField=!1},r=(e,t,s)=>{t.push(e),s.field=0,s.line++,s.lineOffset=-1,s.appendRow=!1},i=(e,i=t)=>new Promise(o=>{((e,i=t)=>{const o=Object.assign({},t,i),c={field:0,fieldOffset:0,line:0,lineOffset:0,quoted:!1,appendCell:!1,appendField:!1,appendRow:!1};return new Promise((t,i)=>{if(e.length){const n=[];let l=[],h="";for(let t=0;t<e.length;t++)c.appendCell=!0,e[t]===o.quote?t&&"\\"!==e[t-1]?(!h.length||c.quoted?c.quoted=!c.quoted:i(Error(`Invalid CSV text at offset ${c.line}:${c.lineOffset}`)),c.appendCell=!1):h=h.substr(0,h.length-1):e[t]===o.fieldSeparator?c.quoted||(c.appendCell=!1,c.appendField=!0):e[t]===o.lineSeparator&&(c.quoted||(c.appendCell=!1,c.appendField=!0,c.appendRow=!0)),c.appendCell&&(h+=e[t]),c.appendField&&(a(s(h,o),l,c),h=""),c.appendRow&&(r(l,n,c),l=[]),c.lineOffset++,c.fieldOffset++;l.length&&(a(s(h,o),l,c),r(l,n,c)),t(n)}else i(Error("Empty CSV text"))})})(e,i).then(e=>{const t=e[0].filter(e=>"string"==typeof e);o(e.filter((e,t)=>t>0).map(e=>{const s={};return t.forEach((t,a)=>{s[t]=e[a]}),s}))})});class o{map(e){return e.map(e=>this._map(e)).sort((e,t)=>{const s=e.country.localeCompare(t.country);return 0===s?e.state.localeCompare(t.state):s})}_map(e){const t={values:[]};return Object.keys(e).forEach(s=>{if(s.match(/State/))t.state=e[s];else if(s.match(/Country/))t.country=e[s].replace(/\*/,"");else if(s.match(/Lat/))t.lat=parseFloat(e[s]);else if(s.match(/Long/))t.lon=parseFloat(e[s]);else{const a=parseInt(e[s],10),r=new Date(s),i=Date.UTC(r.getFullYear(),r.getMonth(),r.getDate());t.values.push({timestamp:i,value:a})}}),t.values.sort((e,t)=>e.timestamp-t.timestamp),Object.freeze(t)}}class c{map(e){return e.map(e=>this._map(e)).sort((e,t)=>{const s=e.country.localeCompare(t.country);return 0===s?e.state.localeCompare(t.state):s})}_map(e){const t={};return Object.keys(e).forEach(s=>{s.match(/State/)?t.state=e[s]:s.match(/Country/)?t.country=e[s].replace(/\*/,""):s.match(/Lat/)?t.lat=parseFloat(e[s]):s.match(/Long/)?t.lon=parseFloat(e[s]):s.match(/Population/)?t.population=parseInt(e[s]):s.match(/UID/)?t.uid=parseInt(e[s]):s.match(/iso2/)?t.iso2=e[s]:s.match(/iso3/)?t.iso3=e[s]:s.match(/code3/)?t.code3=parseInt(e[s]):s.match(/FIPS/)?t.fips=parseInt(e[s]):s.match(/Admin2/)&&(t.admin2=e[s])}),Object.freeze(t)}}let n;!function(e){e.CONFIRMED="confirmed",e.DEATHS="deaths",e.RECOVERED="recovered",e.LOOKUP="lookup"}(n||(n={})),e.ModelCollector=class{constructor(e=new o,t=new c){this._modelMapper=e,this._lookupMapper=t}async collect(){const e=await this._fetchLookup(),t=await this._fetchModel(n.CONFIRMED),s=await this._fetchModel(n.DEATHS),a=await this._fetchModel(n.RECOVERED);return this.merge(t,s,a,e)}findSeries(e,t){const s=t.find(t=>t.timestamp===e);return s?s.value:0}async merge(e,t,s,a){return new Promise(r=>{r(e.filter(e=>"Canada"!==e.country||"Recovered"!==e.state).map(e=>{const r=a.find(t=>{let s=t.country.localeCompare(e.country);return 0===s&&(s=t.state.localeCompare(e.state)),0===s}),i=t.find(t=>t.country===e.country&&t.state===e.state),o=s.find(t=>t.country===e.country&&t.state===e.state),c=e.values.map(e=>Object.freeze({confirmed:e.value,deaths:this.findSeries(e.timestamp,i?i.values:[]),recovered:this.findSeries(e.timestamp,o?o.values:[]),timestamp:e.timestamp}));return Object.freeze({country:e.country,lat:e.lat,lon:e.lon,state:e.state,population:r&&r.population||0,values:Object.freeze(c)})}))})}async _fetchModel(e){return this._fetch(e).then(e=>i(e)).then(e=>this._modelMapper.map(e))}async _fetchLookup(){return this._fetch(n.LOOKUP).then(e=>i(e)).then(e=>this._lookupMapper.map(e))}async _fetch(e){const t=new Request(this._fetchUrl(e),{headers:this._fetchHeaders(),method:"GET"});return(await fetch(t)).text()}_fetchHeaders(){return{"Accept-Encoding":"gzip, deflate, br"}}_fetchUrl(e){return e===n.LOOKUP?"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/UID_ISO_FIPS_LookUp_Table.csv":`https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_${e}_global.csv`}},e.ModelProcessor=class{constructor(e){this._model=[],e&&e.length&&(this._model=this.process(e))}get model(){return this._model}process(e){return e.map(e=>{const t=e.population?e.population/1e5:1,s={country:e.country,population:e.population};return e.state&&e.state.length&&(s.state=e.state),s.values=e.values.map((e,s,a)=>{const r={5:this.avrg(5,s,a),7:this.avrg(7,s,a),14:this.avrg(14,s,a),21:this.avrg(21,s,a),28:this.avrg(28,s,a)},i=this.diff(e,s,a),o={confirmed:e.confirmed,dead:e.deaths,recovered:e.recovered,active:this.active(e)};return{...o,diff:i,avrg:r,ratio:{...this.ratio(o,t),diff:this.ratio(i,t),avrg:{5:this.ratio(r[5],t),7:this.ratio(r[7],t),14:this.ratio(r[14],t),21:this.ratio(r[21],t),28:this.ratio(r[28],t)}},timestamp:e.timestamp}}),s})}diff(e,t,s){return t?{confirmed:e.confirmed-s[t-1].confirmed,dead:e.deaths-s[t-1].deaths,recovered:e.recovered-s[t-1].recovered,active:this.active(e)-this.active(s[t-1])}:{confirmed:0,dead:0,recovered:0,active:0}}avrg(e,t,s){if(t){const a={confirmed:0,dead:0,recovered:0,active:0};let r=0;for(let i=t;i>t-e&&i>0;i--){const e=this.diff(s[i],i,s);a.confirmed+=e.confirmed,a.dead+=e.dead,a.recovered+=e.recovered,a.active+=e.active,r++}return r?{confirmed:a.confirmed/r,dead:a.dead/r,recovered:a.recovered/r,active:a.active/r}:a}return{confirmed:s[t].confirmed,dead:s[t].deaths,recovered:s[t].recovered,active:this.active(s[t])}}active(e){return e.confirmed-e.deaths-e.recovered}ratio(e,t){return{confirmed:e.confirmed/t,dead:e.dead/t,recovered:e.recovered/t,active:e.active/t}}}}(ie||(ie={}));